/****************************************************************************
**
** Copyright (C) 2012 Digia Plc and/or its subsidiary(-ies).
** Contact: http://www.qt-project.org/legal
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and Digia.  For licensing terms and
** conditions see http://qt.digia.com/licensing.  For further information
** use the contact form at http://qt.digia.com/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file.  Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: http://www.gnu.org/copyleft/fdl.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \page qtexamplesandtutorials.html
    \title Qt Examples And Tutorials

    \section1 Tutorials

    A collection of tutorials and \e walkthrough guides are provided with Qt to
    help new users get started with Qt development. These documents cover a
    range of topics, from basic use of widgets to step-by-step tutorials that
    show how an application is put together.

    \section2 Qt Creator
    Qt Creator is the integrated development environment (IDE) for Qt.
    \list
    \li \l{external: Qt Creator Manual}{Qt Creator Manual} - The manual contains
    information on how to achieve development tasks
    These are excerpts from the manual:
        \list
        \omit broken link
        \li \l{external: Tutorials for Creator}{Qt Creator Tutorials}
        \endomit
        \li \l{external: Creating Qt Projects in Creator}{Creating Qt Projects in Qt Creator}
        \li \l{external: Building and Running Applications in Creator}{Building and Running Applications in Qt Creator}
        \li \l{external: Debugging Applications in Creator}{Debugging Applications in Qt Creator}
        \endlist
    \endlist

    \section2 Qt Quick Essentials
    Qt Quick and QML features are covered in several tutorials, ranging from
    easy introductions to advanced tutorials that mix QML with C++ and
    JavaScript.
        \list
        \li \l{QML Tutorial}{Hello World} - A very simple QML example that
        demonstrates the basic QML features
        \li \l{Getting Started Programming with Qt Quick}{QML Text Editor} - An
        intermediate QML tutorial that covers many QML features such as states,
        plugins, and C++ development
        \li \l{QML Advanced Tutorial}{SameGame} - A walkthrough of creating a
        simple game using QML for the interface and JavaScript for the game
        logic
        \omit broken links
        \image qml-samegame-demo-small.png Samegame
        \endomit
        \endlist

    \omit
    Omitted for now since the links are broken.
    \section2 QtWebKit
    \list
    \li \l{QtWebKit Guide} - An introductory guide to the features of QtWebKit
    and HTML5.
        \list
        \li \l{QtWebKit Guide - Level 3 CSS}{CSS Chapter} - Covers what is
        possible with CSS3 and QtWebKit.
        \li \l{Canvas Graphics}{HTML5 Canvas Chapter} - Covers the basics of
        integrating the <canvas> element into web applications.
        \li \l{QtWebKit Guide - Client Storage}{Client Storage Chapter} -
        Describes the basics of storing information on the client side.
        \endlist
    \endlist
    \endomit

    \section2 Qt Essentials
    The basic concepts and technologies in Qt are introduced in these essential
    tutorials.
        \list
        \li \l{Getting Started Programming with Qt Widgets}{Qt Text Editor} - A simple
        tutorial detailing the creation of a basic Qt application
        Introduces the use of slots and signals, file operations, and widgets.
        \li \l{Address Book Tutorial}{Address Book} - A beginner's guide to
        widgets, container classes, and layouts. This tutorial is also available
        with
        \l{Tutoriel "Carnet d'adresses"}{French version}.
        \omit broken links
        \image addressbook-tutorial.png AddressBook
        \endomit
        \li \l{modelview.html}{ModelView} - This tutorial gives an introduction to
        ModelView programming using the Qt cross-platform framework
        \li\l{thread-basics.html}{Threads} - A short tutorial about thread concepts
        in general and basic Qt classes to handle threads
        \endlist

    \section2 Qt Utilities
    \list
    \li \l{Qt Test Tutorial}{Qt Test} - This tutorial gives a short
    introduction to how to use some of the features of Qt's unit-testing
    framework, Qt Test. It is divided into four chapters.
    \li \l{qmake Tutorial}{qmake} - This tutorial teaches you how to use \c
    qmake. We recommend that you read the \l{qmake Manual}{qmake user guide}
    after completing this tutorial.
    \li \l{Qt Linguist Manual: Programmers#Tutorials}{Qt Linguist} - A guided
    tour through the translations process, explaining the tools provided for
    developers, translators and release managers.
    \omit broken links
    \image linguist-examples.png QtLinguist
    \endomit
    \endlist

    \section1 Examples

    Qt includes a set of examples that cover nearly every aspect of Qt
    development. They demonstrate usage of various modules and technologies.

    The examples include a project file and some include documentation.
    Qt Creator can directly run these examples through the Welcome Page.

    The \l{Qt Widget Gallery} also provides overviews of selected Qt
    widgets in each of the styles used on various supported platforms.

    Most examples are provided under the terms of the
    \l{New and Modified BSD Licenses}{Modified BSD License}. Some examples
    are however provided under the terms of the
    \l{GNU Lesser General Public License (LGPL)}{GNU LGPL version 2.1}.

    \annotatedlist all-examples
*/

/*!
   \group all-examples
   \title List of Qt Examples
   \brief Alphabetical listing of Qt Examples
*/

/*!
    \page examples-layouts.html
    \ingroup all-examples
    \title Layout Examples
    \brief Using Qt's layout-based approach to widget management.

    \image layout-examples.png

    Qt uses a layout-based approach to widget management. Widgets are arranged in
    the optimal positions in windows based on simple layout rules, leading to a
    consistent look and feel.

    Custom layouts can be used to provide more control over the positions and
    sizes of child widgets.

    \list
    \li \l{layouts/basiclayouts}{Basic Layouts}\raisedaster
    \li \l{layouts/borderlayout}{Border Layout}
    \li \l{layouts/dynamiclayouts}{Dynamic Layouts}
    \li \l{layouts/flowlayout}{Flow Layout}
    \endlist

    Examples marked with an asterisk (*) are fully documented.
*/

/*!
    \page examples-itemviews.html
    \ingroup all-examples
    \title Item Views Examples
    \brief Using the model/view design pattern to separate presentation from data.

    \image itemview-examples.png

    Item views are widgets that typically display data sets. Qt 4's model/view
    framework lets you handle large data sets by separating the underlying data
    from the way it is represented to the user, and provides support for
    customized rendering through the use of delegates.

    \list
    \li \l{itemviews/addressbook}{Address Book}\raisedaster
    \li \l{itemviews/basicsortfiltermodel}{Basic Sort/Filter Model}
    \li \l{itemviews/chart}{Chart}
    \li \l{itemviews/coloreditorfactory}{Color Editor Factory}\raisedaster
    \li \l{itemviews/combowidgetmapper}{Combo Widget Mapper}\raisedaster
    \li \l{itemviews/customsortfiltermodel}{Custom Sort/Filter Model}\raisedaster
    \li \l{itemviews/dirview}{Dir View}
    \li \l{itemviews/editabletreemodel}{Editable Tree Model}\raisedaster
    \li \l{itemviews/fetchmore}{Fetch More}\raisedaster
    \li \l{itemviews/frozencolumn}{Frozen Column}\raisedaster
    \li \l{itemviews/interview}{Interview}
    \li \l{itemviews/pixelator}{Pixelator}\raisedaster
    \li \l{itemviews/puzzle}{Puzzle}
    \li \l{itemviews/simpledommodel}{Simple DOM Model}\raisedaster
    \li \l{itemviews/simpletreemodel}{Simple Tree Model}\raisedaster
    \li \l{itemviews/simplewidgetmapper}{Simple Widget Mapper}\raisedaster
    \li \l{itemviews/spinboxdelegate}{Spin Box Delegate}\raisedaster
    \li \l{itemviews/spreadsheet}{Spreadsheet}
    \li \l{itemviews/stardelegate}{Star Delegate}\raisedaster
    \endlist

    Examples marked with an asterisk (*) are fully documented.
*/

/*!
    \page examples-graphicsview.html
    \ingroup all-examples
    \title Graphics View Examples
    \brief Using Qt to manage and interact with a large (potentially) number of graphics items.

    \image graphicsview-examples.png

    Qt is provided with a comprehensive canvas through the GraphicsView
    classes.

    These examples demonstrate the fundamental aspects of canvas programming
    with Qt.

    \list
    \li \l{graphicsview/chip}{40000 Chips}
    \li \l{graphicsview/boxes}{Boxes}
    \li \l{graphicsview/collidingmice}{Colliding Mice}\raisedaster
    \li \l{graphicsview/diagramscene}{Diagram Scene}\raisedaster
    \li \l{graphicsview/dragdroprobot}{Drag and Drop Robot}\raisedaster
    \li \l{graphicsview/elasticnodes}{Elastic Nodes}\raisedaster
    \li \l{graphicsview/padnavigator}{Pad Navigator}\raisedaster
    \li \l{graphicsview/portedasteroids}{Ported Asteroids}
    \li \l{graphicsview/portedcanvas}{Ported Canvas}
    \endlist

    These examples show the use of graphics widgets and layouts.

    \list
    \li \l{graphicsview/anchorlayout}{Anchor Layout}
    \li \l{graphicsview/flowlayout}{Flow Layout}
    \li \l{graphicsview/simpleanchorlayout}{Simple Anchor Layout}
    \li \l{graphicsview/weatheranchorlayout}{Weather Anchor Layout}
    \li \l{graphicsview/basicgraphicslayouts}{Basic Graphics Layouts}
    \li \l{graphicsview/embeddeddialogs}{Embedded Dialogs}
    \endlist

    Some examples demonstrate the use of graphics effects with canvas items.

    \list
    \li \l{effects/blurpicker}{Blur Picker Effect}
    \li \l{effects/fademessage}{Fade Message Effect}
    \li \l{effects/lighting}{Lighting Effect}
    \endlist

    Examples marked with an asterisk (*) are fully documented.
*/





/*!
    \page examples-draganddrop.html
    \ingroup all-examples
    \title Drag and Drop Examples
    \brief How to access your platform's native drag and drop functionality.

    \image draganddrop-examples.png

    Qt supports native drag and drop on all platforms via an extensible
    MIME-based system that enables applications to send data to each other in the
    most appropriate formats.

    Drag and drop can also be implemented for internal use by applications.

    \list
    \li \l{draganddrop/draggableicons}{Draggable Icons}
    \li \l{draganddrop/draggabletext}{Draggable Text}
    \li \l{draganddrop/dropsite}{Drop Site}\raisedaster
    \li \l{draganddrop/fridgemagnets}{Fridge Magnets}\raisedaster
    \li \l{draganddrop/puzzle}{Drag and Drop Puzzle}
    \endlist

    Examples marked with an asterisk (*) are fully documented.
*/
// This example seems to have disappeared:
//    \li \l{draganddrop/delayedencoding}{Delayed Encoding}\raisedaster



/*!
    \page examples-threadandconcurrent.html
    \ingroup all-examples
    \title Threading and Concurrent Programming Examples
    \brief Threading and concurrent programming in Qt.

    \image thread-examples.png

    Qt makes it easy to write multithreaded applications. Signals and slots can be used
    to safely communicate between threads in your application.

    \list
    \li \l{threads/queuedcustomtype}{Queued Custom Type}\raisedaster
    \li \l{threads/mandelbrot}{Mandelbrot}\raisedaster
    \li \l{threads/semaphores}{Semaphores}\raisedaster
    \li \l{threads/waitconditions}{Wait Conditions}\raisedaster
    \endlist

    The QtConcurrent namespace includes a collection of classes and functions
    for straightforward concurrent programming.

    These examples show how to apply the basic techniques of concurrent
    programming to simple problems.

    \list
    \li \l{qtconcurrent/imagescaling}{QtConcurrent Asynchronous Image Scaling}
    \li \l{qtconcurrent/map}{QtConcurrent Map}
    \li \l{qtconcurrent/progressdialog}{QtConcurrent Progress Dialog}
    \li \l{qtconcurrent/runfunction}{QtConcurrent Run Function}
    \li \l{qtconcurrent/wordcount}{QtConcurrent Word Count}
    \endlist

    Examples marked with an asterisk (*) are fully documented.
*/

/*!
    \ingroup all-examples
    \title Tools Examples
    \brief Using Qt's containers, iterators, and other tool classes.
    \group examples-widgets-tools

    \image tool-examples.png

    Qt is equipped with a range of capable tool classes, from containers and
    iterators to classes for string handling and manipulation.

    Other classes provide application infrastructure support, handling plugin
    loading and managing configuration files.

*/

/*!
    \page examples-network.html
    \ingroup all-examples
    \title Network Examples
    \brief How to do network programming in Qt.

    \image network-examples.png

    Qt is provided with an extensive set of network classes to support both
    client-based and server side network programming.

    These examples demonstrate the fundamental aspects of network programming
    with Qt.

    \list
    \li  \l{network/blockingfortuneclient}{Blocking Fortune Client}\raisedaster
    \li  \l{network/broadcastreceiver}{Broadcast Receiver}
    \li  \l{network/broadcastsender}{Broadcast Sender}
    \li  \l{network/download}{Download}
    \li  \l{network/downloadmanager}{Download Manager}
    \li  \l{network/network-chat}{Network Chat}
    \li  \l{network/fortuneclient}{Fortune Client}\raisedaster
    \li  \l{network/fortuneserver}{Fortune Server}\raisedaster
    \li  \l{network/qftp}{FTP}\raisedaster
    \li  \l{network/http}{HTTP}
    \li  \l{network/loopback}{Loopback}
    \li  \l{network/threadedfortuneserver}{Threaded Fortune Server}\raisedaster
    \li  \l{network/torrent}{Torrent}
    \li  \l{network/googlesuggest}{Google Suggest}
    \li  \l{network/bearercloud}{Bearer Cloud}\raisedaster
    \li  \l{network/bearermonitor}{Bearer Monitor}
    \li  \l{network/securesocketclient}{Secure Socket Client}
    \li  \l{network/multicastreceiver}{Multicast Receiver}
    \li  \l{network/multicastsender}{Multicast Sender}
    \endlist

    Examples marked with an asterisk (*) are fully documented.
*/

/*!
    \omit
    \group examples-ipc
    \ingroup all-examples
    \title IPC Examples
    \brief Inter-Process Communication with Qt.

    \image ipc-examples.png

    \endomit
*/


/*!
    \page examples-multimedia.html
    \ingroup all-examples
    \title Multimedia Examples
    \brief Audio and Video with Qt.

    \section1 Multimedia

    Qt provides low-level audio support on Linux, Windows and Mac OS X by default and
    an audio plugin API to allow developers to implement their own audio support for
    custom devices and platforms.

    \section1 Audio Handling

    These examples demonstrate the basic techniques used to take advantage of the
    Audio API in Qt applications.

    \annotatedlist audio_examples

    \section1 Video Output

    \annotatedlist video_examples

    Examples marked with an asterisk (*) are fully documented.

*/

/*!
    \page examples-sql.html
    \ingroup all-examples
    \title SQL Examples
    \brief Accessing your SQL database from Qt.

    \image sql-examples.png

    Qt provides extensive database interoperability, with support for products
    from both open source and proprietary vendors.

    SQL support is integrated with Qt's model/view architecture, making it easier
    to provide GUI integration for your database applications.

    \list
     \li \l {Cached Table Example}{Caches Table}
     \li \l {Drill Down Example}{Drill Down}
     \li \l {Master Detail Example}{Master Detail}
     \li \l {Query Model Example}{Query Model}
     \li \l {Relational Table Model Example}{Relational Table}
     \li \l {SQL Browser}
     \li \l {SQL Widget Mapper Example}{SQL Widget Mapper}
     \li \l {Table Model Example}{Table Model}
    \endlist

    Examples marked with an asterisk (*) are fully documented.
*/


/*!
    \page examples-xml.html
    \ingroup all-examples
    \title XML Examples
    \brief Using XML with Qt.

    \image xml-examples.png XML

    The XQuery/XPath and XML Schema engines in the QtXmlPatterns modules
    provide classes for querying XML files and custom data models.

    \annotatedlist xmlpattern_examples

    Examples marked with an asterisk (*) are fully documented.
*/
/*
###Add these back in to the section above when the examples have documentation

    XML parsing and handling is supported through SAX and DOM compliant APIs
    as well as streaming classes.

    \list
    \li \l{xml/dombookmarks}{DOM Bookmarks}
    \li \l{xml/saxbookmarks}{SAX Bookmarks}
    \li \l{xml/streambookmarks}{QXmlStream Bookmarks}\raisedaster
    \li \l{xml/rsslisting}{RSS-Listing}
    \li \l{xml/xmlstreamlint}{XML Stream Lint Example}\raisedaster
    \li \l{xml/htmlinfo}{XML HTML Info}
    \endlist

    \list
    \li \l{xmlpatterns/recipes}{Recipes}
    \li \l{xmlpatterns/filetree}{File System Example}
    \li \l{xmlpatterns/qobjectxmlmodel}{QObject XML Model Example}
    \li \l{xmlpatterns/xquery/globalVariables}{C++ Source Code Analyzer Example}
    \li \l{xmlpatterns/trafficinfo}{Traffic Info}\raisedaster
    \li \l{xmlpatterns/schema}{XML Schema Validation}\raisedaster
    \endlist

*/

/*!
    \page examples-designer.html
    \ingroup all-examples
    \title Qt Designer Examples
    \brief Using Qt Designer to build your UI.

    Qt Designer is a capable graphical user interface designer that lets you
    create and configure forms without writing code. GUIs created with
    Qt Designer can be compiled into an application or created at run-time.

    \list
    \li \l{designer/arthurplugin}{Arthur Plugin}
    \li \l{designer/calculatorbuilder}{Calculator Builder}\raisedaster
    \li \l{designer/calculatorform}{Calculator Form}\raisedaster
    \li \l{designer/customwidgetplugin}{Custom Widget Plugin}\raisedaster
    \li \l{designer/taskmenuextension}{Task Menu Extension}\raisedaster
    \li \l{designer/containerextension}{Container Extension}\raisedaster
    \li \l{designer/worldtimeclockbuilder}{World Time Clock Builder}\raisedaster
    \li \l{designer/worldtimeclockplugin}{World Time Clock Plugin}\raisedaster
    \endlist
*/

/*!
    \page examples-uitools.html
    \title UiTools Examples
    \brief Using the QtUiTools module.

    \image uitools-examples.png UiTools

    \list
    \li \l{uitools/multipleinheritance}{Multiple Inheritance}\raisedaster
    \li \l{uitools/textfinder}{Text Finder}\raisedaster
    \endlist
*/

/*!
    \page examples-linguist.html
    \ingroup all-examples
    \ingroup internationalization
    \title Qt Linguist Examples
    \brief Using Qt Linguist to internationalize your Qt application.

    Internationalization is a core feature of Qt. These examples show how to
    access translation and localization facilities at run-time.

    \list
    \li \l{linguist/hellotr}{Hello tr()}\raisedaster
    \li \l{linguist/arrowpad}{Arrow Pad}\raisedaster
    \li \l{linguist/trollprint}{Troll Print}\raisedaster
    \endlist
*/

/*!
    \page examples-webkit.html
    \ingroup all-examples
    \title WebKit Examples
    \brief Using WebKit in your Qt application.

    \image webkit-examples.png WebKit

    Qt provides an integrated Web browser component based on WebKit, the popular
    open source browser engine.

    These examples and demonstrations show a range of different uses for WebKit,
    from displaying Web pages within a Qt user interface to an implementation of
    a basic function Web browser.

    \table
    \header \li Example \li Description
    \row \li \l{webkit/domtraversal}{DOM Traversal}\raisedaster
    \li Shows how to use QWebElement to inspect the document structure of a Web page.
    \row \li \l{webkit/browser}{Tab Browser}
    \li A browser example, showing a browser with support for tabs.
    \row \li \l{webkit/fancybrowser}{Fancy Browser}
    \li A browser example, showing the use of jQuery to perform effects.
    \row \li \l{webkit/formextractor}{Form Extractor}
    \li How to use JavaScript and C++ together to read page content.
    \row \li \l{webkit/framecapture}{Frame Capture}
    \li How to use the WebKit browser engine to obtain images of Web pages.
    \row \li \l{webkit/googlechat}{Google Chat}
    \li A real-world example that shows how an existing Web-based service can be accessed
    using QtWebKit.
    \row \li \l{webkit/imageanalyzer}{Image Analyzer}\raisedaster
    \li A \l{The QtWebKit Bridge}{QtWebKit bridge} application which contains a
    web interface and client-side processing.
    \row \li \l{webkit/previewer}{Previewer}\raisedaster
    \li Shows how to make a simple Web page previewer by using Qt's text input widgets
    together with a QWebView widget.
    \row \li \l{webkit/simpleselector}{Simple Selector}\raisedaster
    \li A basic demonstration, showing how to use QWebElement to select elements in a
    Web page.
    \row \li \l{webkit/simplewebplugin}{Simple Web Plugin}\raisedaster
    \li Shows how to embed a widget into a Web page displayed using a QWebView
    widget.
    \row \li \l{webkit/webftpclient}{Web FTP Client}\raisedaster
    \li Shows how to add support for a new protocol to QtWebKit-based applications.
    \row \li \l{webkit/webplugin}{Web Plugin}\raisedaster
    \li Shows how to communicate with a widget embedded into a Web page.
    \endtable

    Examples marked with an asterisk (*) are fully documented.
*/

/*!
    \page examples-helpsystem.html
    \title Help System Examples
    \brief Adding interactive help to your Qt application.

    \image assistant-examples.png HelpSystem

    Support for interactive help is provided by the Qt Assistant application.
    Developers can take advantages of the facilities it offers to display
    specially-prepared documentation to users of their applications.

    \list
    \li \l{help/simpletextviewer}{Simple Text Viewer}\raisedaster
    \li \l{help/remotecontrol}{Remote Control}
    \li \l{help/contextsensitivehelp}{Context-Sensitive Help}
    \endlist

    Examples marked with an asterisk (*) are fully documented.
*/

/*!
    \page examples-statemachine.html
    \ingroup all-examples
    \title State Machine Examples
    \brief Using Qt's finite state machine classes.

    Qt provides a powerful hierarchical finite state machine through the Qt State
    Machine classes.

    These examples demonstrate the fundamental aspects of implementing
    Statecharts with Qt.

    \list
    \li \l{statemachine/eventtransitions}{Event Transitions}\raisedaster
    \li \l{statemachine/factorial}{Factorial States}\raisedaster
    \li \l{statemachine/pingpong}{Ping Pong States}\raisedaster
    \li \l{statemachine/rogue}{Rogue}\raisedaster
    \li \l{statemachine/trafficlight}{Traffic Light}\raisedaster
    \li \l{statemachine/twowaybutton}{Two-way Button}\raisedaster
    \endlist
*/

/*!
    \page examples-animation.html
    \ingroup all-examples
    \title Animation Framework Examples
    \brief Doing animations with Qt.

    \image animation-examples.png Animation

    \list
    \li \l{animation/animatedtiles}{Animated Tiles}
    \li \l{animation/appchooser}{Application Chooser}
    \li \l{animation/easing}{Easing Curves}
    \li \l{animation/moveblocks}{Move Blocks}\raisedaster
    \li \l{animation/states}{States}
    \li \l{animation/stickman}{Stick man}\raisedaster
    \li \l{animation/sub-attaq}{Sub-Attaq}
    \endlist

    Examples marked with an asterisk (*) are fully documented.
*/

/*!
    \group touchinputexamples
    \ingroup all-examples
    \title Touch Input Examples
    \brief Using Qt's touch input capability.

    Support for touch input makes it possible for developers to create
    extensible and intuitive user interfaces.
*/

/*!
    \page examples-gestures.html
    \title Gestures Examples
    \brief Gesture programming examples.

    The API of the gesture framework is not yet finalized and
    still subject to change.

    \list
    \li \l{gestures/imagegestures}{Image Gestures}
    \endlist
*/

/*!
    \page examples-dbus.html
    \title D-Bus Examples
    \brief Using D-Bus from Qt applications.

    \list
    \li \l{dbus/dbus-chat}{Chat}
    \li \l{dbus/complexpingpong}{Complex Ping Pong}
    \li \l{dbus/listnames}{List Names}
    \li \l{dbus/pingpong}{Ping Pong}
    \li \l{dbus/remotecontrolledcar}{Remote Controlled Car}
    \endlist

    Examples marked with an asterisk (*) are fully documented.
*/

/*!
    \page examples-activeqt.html
    \title ActiveQt Examples
    \brief Using ActiveX from Qt applications.

    \image activeqt-examples.png ActiveQt

    \list
    \li \l{activeqt/comapp}{COM App}\raisedaster
    \li \l{Dot Net Example (ActiveQt)}{Dot Net}\raisedaster
    \li \l{activeqt/hierarchy}{Hierarchy}\raisedaster
    \li \l{activeqt/menus}{Menus}\raisedaster
    \li \l{activeqt/multiple}{Multiple}\raisedaster
    \li \l{activeqt/opengl}{OpenGL}\raisedaster
    \li \l{activeqt/qutlook}{Qutlook}\raisedaster
    \li \l{activeqt/simple}{Simple}\raisedaster
    \li \l{activeqt/webbrowser}{Web Browser}\raisedaster
    \li \l{activeqt/wrapper}{Wrapper}\raisedaster
    \endlist
*/
