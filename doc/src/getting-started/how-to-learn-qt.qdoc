/****************************************************************************
**
** Copyright (C) 2012 Digia Plc and/or its subsidiary(-ies).
** Contact: http://www.qt-project.org/legal
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and Digia.  For licensing terms and
** conditions see http://qt.digia.com/licensing.  For further information
** use the contact form at http://qt.digia.com/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file.  Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: http://www.gnu.org/copyleft/fdl.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \page how-to-learn-qt.html
    \title How to Learn Qt
    \brief Links to guides and resources for learning Qt.
    \nextpage Tutorials

    \section1 Getting Started

    We assume that you already know C++ and will be using it for Qt
    development. See the \l{Qt Homepage} for more information about
    using other programming languages with Qt.

    If you want to program purely in C++, designing your interfaces
    in code without the aid of any design tools, take a look at the
    \l{Tutorials}. These are designed to get you into Qt programming,
    with an emphasis on working code rather than being a tour of features.

    If you want to design your user interfaces using a design tool, then
    read at least the first few chapters of the \l{Qt Designer manual}.

    By now you'll have produced some small working applications and
    have a broad feel for Qt programming. You could start work on your
    own projects straight away, but we recommend reading a couple of
    key overviews to deepen your understanding of Qt: The Qt \l{Object
    Model} and \l{Signals and Slots}.

    \div {class="float-left"}
    \inlineimage qtdemo-small.png
    \enddiv

    \section1 Getting an Overview

    At this point, we recommend looking at the
    \l{All Overviews and HOWTOs}{overviews} and reading those that are
    relevant to your projects. You may also find it useful to browse the
    source code of the \l{Qt Examples}{examples} that have things in
    common with your projects. You can also read Qt's source code since
    this is supplied.

    If you run the \l{Examples and Demos Launcher}, you'll see many of Qt's
    widgets in action.

    The \l{Qt Widget Gallery} also provides overviews of selected Qt
    widgets in each of the styles used on various supported platforms.
    \clearfloat

    \section1 Books and Learning Materials

    Qt comes with extensive documentation, with hypertext
    cross-references throughout, so you can easily click your way to
    whatever interests you. The part of the documentation that you'll
    probably use the most is the \link index.html API
    Reference\endlink. Each link provides a different way of
    navigating the API Reference; try them all to see which work best
    for you. You might also like to try \l{Qt Assistant}:
    this tool is supplied with Qt and provides access to the entire
    Qt API, and it provides a full text search facility.

    There are also a growing number of books about Qt programming.
    We recommend the official Qt book,
    \l{http://www.amazon.com/gp/product/0132354160/ref=ase_trolltech/}{C++
    GUI Programming with Qt 4, Second Edition} (ISBN 0-13-235416-0). This book
    provides comprehensive coverage of Qt programming all the way
    from "Hello Qt" to advanced features such as multithreading, 2D and
    3D graphics, networking, item view classes, and XML. (The first edition,
    which is based on Qt 4.1, is available
    \l{http://www.qtrac.eu/C++-GUI-Programming-with-Qt-4-1st-ed.zip}{online}.)

    Another valuable source of example code and explanations of Qt
    features is the archive of articles from \l{Qt Quarterly}, a quarterly newsletter for users of Qt.

    For documentation on specific Qt modules and other guides, refer to
    \l{All Overviews and HOWTOs}.

    Good luck, and have fun!
*/
