/****************************************************************************
**
** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
** Contact: http://www.qt-project.org/
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** GNU Free Documentation License
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file.
**
** Other Usage
** Alternatively, this file may be used in accordance with the terms
** and conditions contained in a signed written agreement between you
** and Nokia.
**
**
**
**
**
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \group qws
    \title Qt for Embedded Linux Classes
    \ingroup groups
    \ingroup qt-embedded-linux
    \ingroup platform-specific

    \brief Classes that are specific to Qt for Embedded Linux.

    These classes are relevant to \l{Qt for Embedded Linux} users.
*/


/*!
    \group qt-embedded-linux
    \ingroup qt-embedded
    \title Qt for Embedded Linux
    \brief Documents specifically about Qt for Embedded Linux.

    Qt for Embedded Linux is a C++ framework for GUI and application development
    for embedded devices. It runs on a variety of processors, usually
    with Embedded Linux.  Qt for Embedded Linux provides the standard Qt API for
    embedded devices with a lightweight window system.

    \image qt-embedded-linux-architecture.png

    Qt for Embedded Linux applications write directly to the framebuffer,
    eliminating the need for the X Window System and saving memory.
    The Linux framebuffer is enabled by default on all modern Linux
    distributions. For information on older versions, please refer to
    the \l{Framebuffer HOWTO} document. For development
    and debugging purposes, Qt for Embedded Linux provides a \l {The
    Virtual Framebuffer}{virtual framebuffer}. It is also possible to
    run an application using the
    \l{The VNC Protocol and Qt for Embedded Linux}{VNC protocol}.

    \table 100%
    \header \li Getting Started \li Reference \li Features
    \row
    \li
     \list
        \li \l {Qt for Embedded Linux Architecture}{Architecture Overview}
        \li \l {Installing Qt for Embedded Linux}{Installation}
        \li \l {Running Qt for Embedded Linux Applications}{Running Applications}
        \li \l {Qt for Embedded Linux Examples}{Examples}
    \endlist
    \li
    \list
        \li \l {Qt for Embedded Linux Classes}{Classes}
        \li \l {Qt for Embedded Linux Environment Variables}{Environment Variables}
        \li \l {Licenses for Fonts Used in Qt for Embedded Linux}{Font Licenses}
    \endlist
    \li
    \list
        \li \l {Qt for Embedded Linux Pointer Handling}{Pointer Handling}
        \li \l {Qt for Embedded Linux Character Input}{Character Input}
        \li \l {Qt for Embedded Linux Display Management}{Display Management}
        \li \l {Qt for Embedded Linux Hardware Accelerated Graphics}{Hardware Accelerated Graphics}
        \li \l {Qt for Embedded Linux Fonts}{Fonts}
    \endlist

    \header \li Development \li Porting \li Optimization
    \row
    \li
     \list
        \li \l {The Virtual Framebuffer}{Virtual Framebuffer}
        \li \l {The VNC Protocol and Qt for Embedded Linux}{VNC Protocol}
        \li \l {Testing the Linux Framebuffer}
        \li \l {Cross Compiling Qt for Embedded Linux Applications}{Cross Compiling Applications}
        \li \l {Deploying Qt for Embedded Linux Applications}{Deploying Applications}
    \endlist
    \li
    \list
        \li \l {Porting Qt Applications to Qt for Embedded Linux}
        \li \l {Porting Qt for Embedded Linux to a New Architecture}
        \li \l {Porting Qt for Embedded Linux to Another Operating System}
    \endlist
    \li
    \list
        \li \l {Qt Performance Tuning}
        \li \l {Fine-Tuning Features in Qt}
        \li \l {Adding an Accelerated Graphics Driver to Qt for Embedded Linux}{Adding an Accelerated Graphics Driver}
    \endlist
    \endtable
*/
