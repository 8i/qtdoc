/****************************************************************************
**
** Copyright (C) 2012 Digia Plc and/or its subsidiary(-ies).
** Contact: http://www.qt-project.org/legal
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and Digia.  For licensing terms and
** conditions see http://qt.digia.com/licensing.  For further information
** use the contact form at http://qt.digia.com/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file.  Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: http://www.gnu.org/copyleft/fdl.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
\page topics-core.html
\title Core Fundamentals
\brief Qt's core topics

Qt contains a rich set of fundamental enablers, mainly in the \l{QtCore}{Qt
Core module}. Qt uses these enablers to provide higher-level UI and
application development components. The following topics explain the most
important enablers and show how to use them to implement specialized
functionality not already provided by Qt.

\section1 Objects, Properties and Events

\list
\li \l{The Event System}
\li \l{Object Model}
\li \l{The Meta-Object System}
\li \l{The property system}
\li \l{Signals & Slots}
\li \l{Exposing Attributes of C++ Types to QML}{The meta-object in QML}
\li \l{The State Machine Framework}
\endlist


\section1 Fundamental Data Types

\list
\li \l{Container Classes}
\li \l{Unicode in Qt}
\li \l{Internationalization with Qt}
\endlist

\section1 Inter-Process Communication

\list
\li \l{Inter-Process Communication in Qt}
\li \l{QProcess}
\endlist

\section1 Threading

\list
\li \l{Thread Support in Qt}
\li \l{Threading Basics}
\endlist

\section1 Platform Support

\list
\li \l{Qt Platform Abstraction}
\li \l{Wayland Support in Qt}{Wayland}
\li \l{Cross-Platform and Platform-Specific Development}
\li \l{How to Create Qt Plugins}
\endlist
*/
